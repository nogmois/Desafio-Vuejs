{"ast":null,"code":"import { onMounted } from 'vue';\nimport { useProjectStore } from '../store/projects';\nimport TaskCard from '../components/TaskCard.vue';\nimport NewTaskForm from '../components/NewTaskForm.vue';\nimport NewProjectForm from '../components/NewProjectForm.vue';\nimport ProjectList from '../components/ProjectList.vue';\nimport draggable from 'vuedraggable';\nexport default {\n  name: 'ProjectDashboard',\n  components: {\n    TaskCard,\n    NewTaskForm,\n    NewProjectForm,\n    ProjectList,\n    draggable\n  },\n  setup() {\n    const projectStore = useProjectStore();\n    onMounted(() => {\n      projectStore.fetchProjects();\n    });\n    return {\n      projectStore,\n      taskStatuses: computed(() => ({\n        'Pendente': projectStore.currentProject.tasks.filter(t => t.status === 'Pendente'),\n        'Em Progresso': projectStore.currentProject.tasks.filter(t => t.status === 'Em Progresso'),\n        'Feito': projectStore.currentProject.tasks.filter(t => t.status === 'Feito')\n      }))\n    };\n  },\n  methods: {\n    addTask(task) {\n      if (this.projectStore.currentProject) {\n        const projectId = this.projectStore.currentProject._id;\n        this.projectStore.addTaskToProject(projectId, task);\n      } else {\n        console.error('Nenhum projeto selecionado');\n      }\n    },\n    addProject(project) {\n      this.projectStore.addProject(project);\n      this.projectStore.currentProject = project;\n    },\n    selectProject(project) {\n      this.projectStore.currentProject = project;\n    },\n    handleDrop(newStatus, task) {\n      task.status = newStatus;\n      // Aqui você pode chamar uma API para atualizar o status da tarefa no servidor\n    }\n  }\n};","map":{"version":3,"names":["onMounted","useProjectStore","TaskCard","NewTaskForm","NewProjectForm","ProjectList","draggable","name","components","setup","projectStore","fetchProjects","taskStatuses","computed","currentProject","tasks","filter","t","status","methods","addTask","task","projectId","_id","addTaskToProject","console","error","addProject","project","selectProject","handleDrop","newStatus"],"sources":["/home/vboxuser/d_vue/src/views/ProjectDashboard.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <div class=\"layout-wrapper\">\n      <!-- Lista de Projetos -->\n      <div class=\"projects\">\n        <v-card class=\"card-custom\">\n          <v-card-title class=\"title-custom\">Projetos</v-card-title>\n          <v-card-text>\n            <project-list :projects=\"projectStore.projects\" @select-project=\"selectProject\" />\n          </v-card-text>\n        </v-card>\n      </div>\n\n      <!-- Tarefas -->\n      <div class=\"tasks\" v-if=\"projectStore.currentProject\">\n        <v-row>\n          <v-col cols=\"12\" md=\"4\" v-for=\"(tasks, status) in taskStatuses\" :key=\"status\">\n            <v-card>\n              <v-card-title>{{ status }}</v-card-title>\n              <v-card-text>\n                <draggable class=\"drag-area\" :list=\"tasks\" group=\"tasks\">\n                  <v-card v-for=\"task in tasks\" :key=\"task._id\" class=\"card-custom-project mb-2\">\n                    <v-card-text>\n                      <task-card :task=\"task\" />\n                    </v-card-text>\n                  </v-card>\n                </draggable>\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n      </div>\n\n\n      <!-- Formulários -->\n      <div class=\"forms\">\n        <v-card class=\"card-custom\">\n          <v-card-title>Nova Tarefa</v-card-title>\n          <v-card-text>\n            <new-task-form @add-task=\"addTask\" />\n          </v-card-text>\n        </v-card>\n        <v-card class=\"card-custom mt-4\">\n          <v-card-title>Novo Projeto</v-card-title>\n          <v-card-text>\n            <new-project-form @add-project=\"addProject\" />\n          </v-card-text>\n        </v-card>\n      </div>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport { onMounted } from 'vue';\nimport { useProjectStore } from '../store/projects';\nimport TaskCard from '../components/TaskCard.vue';\nimport NewTaskForm from '../components/NewTaskForm.vue';\nimport NewProjectForm from '../components/NewProjectForm.vue';\nimport ProjectList from '../components/ProjectList.vue';\nimport draggable from 'vuedraggable';\n\nexport default {\n  name: 'ProjectDashboard',\n  components: {\n    TaskCard,\n    NewTaskForm,\n    NewProjectForm,\n    ProjectList,\n    draggable\n  },\n  setup() {\n    const projectStore = useProjectStore();\n\n    onMounted(() => {\n      projectStore.fetchProjects();\n    });\n\n    return {\n      projectStore,\n      taskStatuses: computed(() => ({\n        'Pendente': projectStore.currentProject.tasks.filter(t => t.status === 'Pendente'),\n        'Em Progresso': projectStore.currentProject.tasks.filter(t => t.status === 'Em Progresso'),\n        'Feito': projectStore.currentProject.tasks.filter(t => t.status === 'Feito'),\n      }))\n    };\n  },\n  methods: {\n    addTask(task) {\n      if (this.projectStore.currentProject) {\n        const projectId = this.projectStore.currentProject._id;\n        this.projectStore.addTaskToProject(projectId, task);\n      } else {\n        console.error('Nenhum projeto selecionado');\n      }\n    },\n    addProject(project) {\n      this.projectStore.addProject(project);\n      this.projectStore.currentProject = project;\n    },\n    selectProject(project) {\n      this.projectStore.currentProject = project;\n    },\n    handleDrop(newStatus, task) {\n      task.status = newStatus;\n      // Aqui você pode chamar uma API para atualizar o status da tarefa no servidor\n    }\n  }\n}\n</script>\n\n<style>\n.drag-area {\n  min-height: 200px; /* Garante que a área de arrasto seja suficientemente grande */\n  border: 1px dashed #ccc; /* Uma borda pontilhada para indicar a área droppable */\n}\n\n.card-custom-project {\n  cursor: pointer; /* Indica que o card pode ser arrastado */\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n}\n\n.mb-2 {\n  margin-bottom: 8px; /* Espaçamento entre cartões */\n}\n</style>\n\n\n<style scoped>\n.title-custom {\n  text-align: center; /* Centraliza o título se desejado */\n  margin-bottom: 20px; /* Espaço entre o título e a lista */\n}\n\n.card-custom {\n  max-width: 600px; /* Largura máxima do card */\n  padding: 20px; /* Espaçamento interno */\n  display: flex; /* Habilita o display flex */\n  flex-direction: column; /* Organiza os filhos em coluna */\n  gap: 10px; /* Espaço entre cada task-card */\n}\n\n.card-custom-project {\n  height: 99px;\n  display: flex; /* Habilita o display flex */\n  flex-direction: column; /* Organiza os filhos em coluna */\n  gap: 10px; /* Espaço entre cada task-card */\n  background-color: white;\n  margin: 16px;\n  box-shadow: 0px 4px 6px -1px rgba(0,0,0,0.1), 0px 2px 4px -1px rgba(0,0,0,0.07);\n}\n\n.layout-wrapper {\n  display: flex;\n  justify-content: space-between;\n  height: 100vh;\n  background-color: #f0f0f0;\n}\n\n.projects, .tasks, .forms {\n  flex: 1;\n  margin: 0 10px;\n}\n\n.projects {\n  max-width: 300px;\n  background-color: #fff;\n  padding: 16px;\n}\n\n.tasks {\n  max-width: 100%; /* Ajusta a largura máxima para 100% */\n  display: flex; /* Habilita flexbox */\n  flex-wrap: wrap; /* Permite que os itens se ajustem conforme necessário */\n}\n\n.card-custom {\n  width: 100%; /* Faz com que cada cartão ocupe toda a largura da coluna */\n  margin-bottom: 20px; /* Adiciona um espaço entre os cartões */\n  padding: 14px;\n}\n\n.forms {\n  max-width: 300px;\n}\n\n.mt-4 {\n  margin-top: 16px;\n}\n</style>\n\n<style>\nbody {\n  background-color: #e5e5e5;\n  padding: 16px;\n}\n</style>\n"],"mappings":"AAsDA,SAASA,SAAQ,QAAS,KAAK;AAC/B,SAASC,eAAc,QAAS,mBAAmB;AACnD,OAAOC,QAAO,MAAO,4BAA4B;AACjD,OAAOC,WAAU,MAAO,+BAA+B;AACvD,OAAOC,cAAa,MAAO,kCAAkC;AAC7D,OAAOC,WAAU,MAAO,+BAA+B;AACvD,OAAOC,SAAQ,MAAO,cAAc;AAEpC,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVN,QAAQ;IACRC,WAAW;IACXC,cAAc;IACdC,WAAW;IACXC;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,YAAW,GAAIT,eAAe,CAAC,CAAC;IAEtCD,SAAS,CAAC,MAAM;MACdU,YAAY,CAACC,aAAa,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,OAAO;MACLD,YAAY;MACZE,YAAY,EAAEC,QAAQ,CAAC,OAAO;QAC5B,UAAU,EAAEH,YAAY,CAACI,cAAc,CAACC,KAAK,CAACC,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,MAAK,KAAM,UAAU,CAAC;QAClF,cAAc,EAAER,YAAY,CAACI,cAAc,CAACC,KAAK,CAACC,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,MAAK,KAAM,cAAc,CAAC;QAC1F,OAAO,EAAER,YAAY,CAACI,cAAc,CAACC,KAAK,CAACC,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,MAAK,KAAM,OAAO;MAC7E,CAAC,CAAC;IACJ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAACC,IAAI,EAAE;MACZ,IAAI,IAAI,CAACX,YAAY,CAACI,cAAc,EAAE;QACpC,MAAMQ,SAAQ,GAAI,IAAI,CAACZ,YAAY,CAACI,cAAc,CAACS,GAAG;QACtD,IAAI,CAACb,YAAY,CAACc,gBAAgB,CAACF,SAAS,EAAED,IAAI,CAAC;MACrD,OAAO;QACLI,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC7C;IACF,CAAC;IACDC,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAI,CAAClB,YAAY,CAACiB,UAAU,CAACC,OAAO,CAAC;MACrC,IAAI,CAAClB,YAAY,CAACI,cAAa,GAAIc,OAAO;IAC5C,CAAC;IACDC,aAAaA,CAACD,OAAO,EAAE;MACrB,IAAI,CAAClB,YAAY,CAACI,cAAa,GAAIc,OAAO;IAC5C,CAAC;IACDE,UAAUA,CAACC,SAAS,EAAEV,IAAI,EAAE;MAC1BA,IAAI,CAACH,MAAK,GAAIa,SAAS;MACvB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}