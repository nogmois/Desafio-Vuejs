{"ast":null,"code":"import { onMounted } from 'vue';\nimport { useProjectStore } from '../store/projects';\nimport TaskCard from '../components/TaskCard.vue';\nimport NewTaskForm from '../components/NewTaskForm.vue';\nimport NewProjectForm from '../components/NewProjectForm.vue';\nimport ProjectList from '../components/ProjectList.vue';\nexport default {\n  name: 'ProjectDashboard',\n  components: {\n    TaskCard,\n    NewTaskForm,\n    NewProjectForm,\n    ProjectList\n  },\n  computed: {\n    pendingTasks() {\n      return this.projectStore.currentProject.tasks.filter(task => !task.isCompleted && !task.inProgress);\n    },\n    inProgressTasks() {\n      return this.projectStore.currentProject.tasks.filter(task => task.inProgress);\n    },\n    completedTasks() {\n      return this.projectStore.currentProject.tasks.filter(task => task.isCompleted);\n    }\n  },\n  setup() {\n    const projectStore = useProjectStore();\n    onMounted(() => {\n      projectStore.fetchProjects();\n    });\n    return {\n      projectStore\n    };\n  },\n  methods: {\n    addTask(task) {\n      if (this.projectStore.currentProject) {\n        const projectId = this.projectStore.currentProject._id;\n        this.projectStore.addTaskToProject(projectId, task);\n      } else {\n        console.error('Nenhum projeto selecionado');\n      }\n    },\n    addProject(project) {\n      this.projectStore.addProject(project);\n      this.projectStore.currentProject = project;\n    },\n    selectProject(project) {\n      this.projectStore.currentProject = project;\n    }\n  }\n};","map":{"version":3,"names":["onMounted","useProjectStore","TaskCard","NewTaskForm","NewProjectForm","ProjectList","name","components","computed","pendingTasks","projectStore","currentProject","tasks","filter","task","isCompleted","inProgress","inProgressTasks","completedTasks","setup","fetchProjects","methods","addTask","projectId","_id","addTaskToProject","console","error","addProject","project","selectProject"],"sources":["/home/vboxuser/d_vue/src/views/ProjectDashboard.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <div class=\"layout-wrapper\">\n      <!-- Botão de Hambúrguer -->\n      <v-btn icon @click=\"toggleProjects\">\n        <v-icon>mdi-menu</v-icon>\n      </v-btn>\n\n      <!-- Lista de Projetos -->\n      <div v-if=\"showProjects\" class=\"projects\">\n        <v-card class=\"card-custom\">\n          <v-card-title class=\"title-custom\">Projetos</v-card-title>\n          <v-card-text>\n            <project-list :projects=\"projectStore.projects\" @select-project=\"selectProject\" />\n          </v-card-text>\n        </v-card>\n        <v-btn\n          color=\"primary\"\n          class=\"mt-3 new-project-button\"\n          @click=\"addNewProject\"\n        >\n          + Novo Projeto\n        </v-btn>\n      </div>\n\n      <!-- Tarefas -->\n      <div class=\"tasks\" v-if=\"projectStore.currentProject\">\n        <v-row>\n          <v-col cols=\"12\" md=\"4\">\n            <h3>Pendente</h3>\n            <draggable class=\"drag-area\" :list=\"pendingTasks\" group=\"tasks\" @end=\"onEnd\">\n              <v-card class=\"card-custom-project\" v-for=\"task in pendingTasks\" :key=\"task._id\">\n                <v-card-text>\n                  <task-card :task=\"task\" />\n                </v-card-text>\n              </v-card>\n            </draggable>\n          </v-col>\n          <v-col cols=\"12\" md=\"4\">\n            <h3>Em Progresso</h3>\n            <draggable class=\"drag-area\" :list=\"inProgressTasks\" group=\"tasks\" @end=\"onEnd\">\n              <v-card class=\"card-custom-project\" v-for=\"task in inProgressTasks\" :key=\"task._id\">\n                <v-card-text>\n                  <task-card :task=\"task\" />\n                </v-card-text>\n              </v-card>\n            </draggable>\n          </v-col>\n          <v-col cols=\"12\" md=\"4\">\n            <h3>Concluído</h3>\n            <draggable class=\"drag-area\" :list=\"completedTasks\" group=\"tasks\" :options=\"{disabled: true}\">\n              <v-card class=\"card-custom-project\" v-for=\"task in completedTasks\" :key=\"task._id\">\n                <v-card-text>\n                  <task-card :task=\"task\" />\n                </v-card-text>\n              </v-card>\n            </draggable>\n          </v-col>\n        </v-row>\n      </div>\n\n      <!-- Formulários -->\n      <div class=\"forms\">\n        <v-card class=\"card-custom\">\n          <v-card-title>Nova Tarefa</v-card-title>\n          <v-card-text>\n            <new-task-form @add-task=\"addTask\" />\n          </v-card-text>\n        </v-card>\n        <v-card class=\"card-custom mt-4\">\n          <v-card-title>Novo Projeto</v-card-title>\n          <v-card-text>\n            <new-project-form @add-project=\"addProject\" />\n          </v-card-text>\n        </v-card>\n      </div>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport { onMounted } from 'vue';\nimport { useProjectStore } from '../store/projects';\nimport TaskCard from '../components/TaskCard.vue';\nimport NewTaskForm from '../components/NewTaskForm.vue';\nimport NewProjectForm from '../components/NewProjectForm.vue';\nimport ProjectList from '../components/ProjectList.vue';\n\nexport default {\n  name: 'ProjectDashboard',\n  components: {\n    TaskCard,\n    NewTaskForm,\n    NewProjectForm,\n    ProjectList\n  },\n  computed: {\n    pendingTasks() {\n      return this.projectStore.currentProject.tasks.filter(task => !task.isCompleted && !task.inProgress);\n    },\n    inProgressTasks() {\n      return this.projectStore.currentProject.tasks.filter(task => task.inProgress);\n    },\n    completedTasks() {\n      return this.projectStore.currentProject.tasks.filter(task => task.isCompleted);\n    }\n  },\n  setup() {\n    const projectStore = useProjectStore();\n\n    onMounted(() => {\n      projectStore.fetchProjects();\n    });\n\n    return {\n      projectStore\n    };\n  },\n  methods: {\n    addTask(task) {\n      if (this.projectStore.currentProject) {\n        const projectId = this.projectStore.currentProject._id;\n        this.projectStore.addTaskToProject(projectId, task);\n      } else {\n        console.error('Nenhum projeto selecionado');\n      }\n    },\n    addProject(project) {\n      this.projectStore.addProject(project);\n      this.projectStore.currentProject = project;\n    },\n    selectProject(project) {\n      this.projectStore.currentProject = project;\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.new-project-button {\n  width: 100%;\n  display: block;\n  padding: 10px;\n  border-radius: 5px;\n  text-align: center;\n  cursor: pointer;\n  background-color: #f0f0f0; /* Sobrescreve a cor primária se necessário */\n}\n\n.title-custom {\n  text-align: center; /* Centraliza o título se desejado */\n  margin-bottom: 20px; /* Espaço entre o título e a lista */\n}\n\n.card-custom {\n  max-width: 600px; /* Largura máxima do card */\n  padding: 20px; /* Espaçamento interno */\n  display: flex; /* Habilita o display flex */\n  flex-direction: column; /* Organiza os filhos em coluna */\n  gap: 10px; /* Espaço entre cada task-card */\n}\n\n.card-custom-project {\n  height: 99px;\n  width: 208px;\n  padding: 16px;\n  display: flex; /* Habilita o display flex */\n  flex-direction: column; /* Organiza os filhos em coluna */\n  gap: 10px; /* Espaço entre cada task-card */\n  background-color: white;\n  margin: 16px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 6px -1px rgba(0,0,0,0.1), 0px 2px 4px -1px rgba(0,0,0,0.07);\n  border: 1px solid #ccc; /* Adiciona uma borda sólida cinza clara */\n}\n\n.layout-wrapper {\n  display: flex;\n  justify-content: space-between;\n  height: 100vh;\n  background-color: #f0f0f0;\n}\n\n.projects, .tasks, .forms {\n  flex: 1;\n  margin: 0 10px;\n}\n\n.projects {\n  max-width: 300px;\n  background-color: #fff;\n  padding: 16px;\n}\n\n.tasks {\n  max-width: 100%; /* Ajusta a largura máxima para 100% */\n  display: flex; /* Habilita flexbox */\n  flex-wrap: wrap; /* Permite que os itens se ajustem conforme necessário */\n}\n\n.card-custom {\n  width: 100%; /* Faz com que cada cartão ocupe toda a largura da coluna */\n  margin-bottom: 20px; /* Adiciona um espaço entre os cartões */\n  padding: 14px;\n}\n\n.forms {\n  max-width: 300px;\n}\n\n.mt-4 {\n  margin-top: 16px;\n}\n\n@media (max-width: 900px) {\n  .forms {\n    max-width: 100%;\n  }\n\n  .mt-md-0 {\n    margin-top: 0 !important;\n  }\n}\n\n@media (max-width: 900px) {\n  .forms {\n    max-width: 100%;\n  }\n\n  .mt-md-0 {\n    margin-top: 0 !important;\n  }\n}\n\n@media (max-width: 780px) {\n  .layout-wrapper {\n    flex-direction: column;\n  }\n\n  .projects, .tasks, .forms {\n    max-width: 100%;\n    margin: 10px 0; /* Adiciona um espaço entre as seções em telas pequenas */\n  }\n\n  .new-project-button, .card-custom {\n    width: 100%;\n  }\n}\n\n</style>\n\n\n<style>\nbody {\n  background-color: #e5e5e5;\n  padding: 16px;\n}\n</style>\n"],"mappings":"AAiFA,SAASA,SAAQ,QAAS,KAAK;AAC/B,SAASC,eAAc,QAAS,mBAAmB;AACnD,OAAOC,QAAO,MAAO,4BAA4B;AACjD,OAAOC,WAAU,MAAO,+BAA+B;AACvD,OAAOC,cAAa,MAAO,kCAAkC;AAC7D,OAAOC,WAAU,MAAO,+BAA+B;AAEvD,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVL,QAAQ;IACRC,WAAW;IACXC,cAAc;IACdC;EACF,CAAC;EACDG,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACC,YAAY,CAACC,cAAc,CAACC,KAAK,CAACC,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,WAAU,IAAK,CAACD,IAAI,CAACE,UAAU,CAAC;IACrG,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACP,YAAY,CAACC,cAAc,CAACC,KAAK,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACE,UAAU,CAAC;IAC/E,CAAC;IACDE,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACR,YAAY,CAACC,cAAc,CAACC,KAAK,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,WAAW,CAAC;IAChF;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMT,YAAW,GAAIT,eAAe,CAAC,CAAC;IAEtCD,SAAS,CAAC,MAAM;MACdU,YAAY,CAACU,aAAa,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,OAAO;MACLV;IACF,CAAC;EACH,CAAC;EACDW,OAAO,EAAE;IACPC,OAAOA,CAACR,IAAI,EAAE;MACZ,IAAI,IAAI,CAACJ,YAAY,CAACC,cAAc,EAAE;QACpC,MAAMY,SAAQ,GAAI,IAAI,CAACb,YAAY,CAACC,cAAc,CAACa,GAAG;QACtD,IAAI,CAACd,YAAY,CAACe,gBAAgB,CAACF,SAAS,EAAET,IAAI,CAAC;MACrD,OAAO;QACLY,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC7C;IACF,CAAC;IACDC,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAI,CAACnB,YAAY,CAACkB,UAAU,CAACC,OAAO,CAAC;MACrC,IAAI,CAACnB,YAAY,CAACC,cAAa,GAAIkB,OAAO;IAC5C,CAAC;IACDC,aAAaA,CAACD,OAAO,EAAE;MACrB,IAAI,CAACnB,YAAY,CAACC,cAAa,GAAIkB,OAAO;IAC5C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}