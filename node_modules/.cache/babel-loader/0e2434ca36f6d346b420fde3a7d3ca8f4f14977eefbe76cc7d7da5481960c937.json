{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useProjectStore = defineStore('projects', {\n  state: () => ({\n    projects: [],\n    currentProject: null,\n    currentUser: 'userID_atual' // Este deve ser dinâmico baseado na sessão do usuário\n  }),\n  actions: {\n    async fetchProjects() {\n      try {\n        const response = await axios.get('/api/projects');\n        this.projects = response.data;\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    },\n    async addProject(project) {\n      if (this.isUserAuthorized(project.creatorId)) {\n        try {\n          const response = await axios.post('/api/projects', project);\n          this.projects.push(response.data); // Adicione o projeto retornado pelo backend ao state\n        } catch (error) {\n          console.error('Error adding project:', error);\n        }\n      }\n    },\n    async addTaskToProject(projectId, task) {\n      const project = this.getProjectById(projectId);\n      if (project && project.members.includes(this.currentUser) && !task.isCompleted) {\n        try {\n          const response = await axios.post('/api/tasks', {\n            ...task,\n            projectId\n          });\n          project.tasks.push(response.data); // Adicione a tarefa retornada pelo backend\n        } catch (error) {\n          console.error('Error adding task:', error);\n        }\n      }\n    },\n    isUserAuthorized(creatorId) {\n      return this.currentUser === creatorId;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useProjectStore","state","projects","currentProject","currentUser","actions","fetchProjects","response","get","data","error","console","addProject","project","isUserAuthorized","creatorId","post","push","addTaskToProject","projectId","task","getProjectById","members","includes","isCompleted","tasks"],"sources":["/home/vboxuser/d_vue/src/store/projects.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport axios from 'axios';\n\nexport const useProjectStore = defineStore('projects', {\n  state: () => ({\n    projects: [],\n    currentProject: null,\n    currentUser: 'userID_atual'  // Este deve ser dinâmico baseado na sessão do usuário\n  }),\n  actions: {\n    async fetchProjects() {\n      try {\n        const response = await axios.get('/api/projects');\n        this.projects = response.data;\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    },\n    async addProject(project) {\n      if (this.isUserAuthorized(project.creatorId)) {\n        try {\n          const response = await axios.post('/api/projects', project);\n          this.projects.push(response.data); // Adicione o projeto retornado pelo backend ao state\n        } catch (error) {\n          console.error('Error adding project:', error);\n        }\n      }\n    },\n    async addTaskToProject(projectId, task) {\n      const project = this.getProjectById(projectId);\n      if (project && project.members.includes(this.currentUser) && !task.isCompleted) {\n        try {\n          const response = await axios.post('/api/tasks', { ...task, projectId });\n          project.tasks.push(response.data); // Adicione a tarefa retornada pelo backend\n        } catch (error) {\n          console.error('Error adding task:', error);\n        }\n      }\n    },\n    isUserAuthorized(creatorId) {\n      return this.currentUser === creatorId;\n    }\n  }\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAGF,WAAW,CAAC,UAAU,EAAE;EACrDG,KAAK,EAAEA,CAAA,MAAO;IACZC,QAAQ,EAAE,EAAE;IACZC,cAAc,EAAE,IAAI;IACpBC,WAAW,EAAE,cAAc,CAAE;EAC/B,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,eAAe,CAAC;QACjD,IAAI,CAACN,QAAQ,GAAGK,QAAQ,CAACE,IAAI;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,OAAO,EAAE;MACxB,IAAI,IAAI,CAACC,gBAAgB,CAACD,OAAO,CAACE,SAAS,CAAC,EAAE;QAC5C,IAAI;UACF,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAC,eAAe,EAAEH,OAAO,CAAC;UAC3D,IAAI,CAACX,QAAQ,CAACe,IAAI,CAACV,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;MACF;IACF,CAAC;IACD,MAAMQ,gBAAgBA,CAACC,SAAS,EAAEC,IAAI,EAAE;MACtC,MAAMP,OAAO,GAAG,IAAI,CAACQ,cAAc,CAACF,SAAS,CAAC;MAC9C,IAAIN,OAAO,IAAIA,OAAO,CAACS,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACnB,WAAW,CAAC,IAAI,CAACgB,IAAI,CAACI,WAAW,EAAE;QAC9E,IAAI;UACF,MAAMjB,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAC,YAAY,EAAE;YAAE,GAAGI,IAAI;YAAED;UAAU,CAAC,CAAC;UACvEN,OAAO,CAACY,KAAK,CAACR,IAAI,CAACV,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC5C;MACF;IACF,CAAC;IACDI,gBAAgBA,CAACC,SAAS,EAAE;MAC1B,OAAO,IAAI,CAACX,WAAW,KAAKW,SAAS;IACvC;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}